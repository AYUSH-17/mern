{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush.singh\\\\Desktop\\\\MERN\\\\prod-v2\\\\frontend\\\\src\\\\components\\\\ContactUs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Menu } from \"./Home.js\";\nimport \"./ContactUs.css\";\nimport Axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactUs = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [isSingleEvent, setSingleEvent] = useState(false); //const [multipleEvent , setMultipleEvent] = useState('Multiple Event');\n\n  const eventOptions = [{\n    value: \"Wedding\"\n  }, {\n    value: \"Pre-wedding\"\n  }, {\n    value: \"Maternity\"\n  }, {\n    value: \"Baby Shower\"\n  }, {\n    value: \"Product Photoshoot\"\n  }, {\n    value: \"Event Photos\"\n  }, {\n    value: \"Fashion Photography\"\n  }, {\n    value: \"Other\"\n  }];\n  const stateOptions = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"];\n  let [region, setRegion] = useState(\"Choose State\");\n  let [isStateSelected, setStateSelected] = useState(false);\n  let [zip, setZip] = useState(\"\");\n\n  const dummy = e => {\n    setZip(e.target.value);\n    fetchZipCode;\n  };\n\n  const fetchZipCode = () => {\n    let newData = [{}];\n\n    if (zip.length === 6) {\n      Axios.get(`http://localhost:5000/region/${zip}`).then(response => {\n        for (let i = 0; i < response.data.length; i++) {\n          newData = response.data.map(res => ({\n            id: res.id,\n            message: res.message,\n            status: res.status,\n            postOffice: [{\n              Name: res.Name,\n              Description: res.Description,\n              BranchType: res.BranchType,\n              DeliveryStatus: res.DeliveryStatus,\n              Taluk: res.Taluk,\n              Circle: res.Circle,\n              District: res.District,\n              Division: res.Division,\n              Region: res.Region,\n              State: res.State,\n              Country: res.Country\n            }]\n          }));\n        }\n\n        const state = newData.find(el => el.id == \"277201\");\n        setRegion(state.status);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {// always executed\n      });\n    } else {}\n  };\n\n  const contactUsHandler = event => {\n    event.preventDefault();\n    alert(\"Form Submitted\");\n  }; // const ExampleCustomInput = forwardRef(\n  //   ({ value, onClick }, ref) => (\n  //     <button className=\"example-custom-input\" onClick={onClick} ref={ref}>\n  //       {value}\n  //     </button>\n  //   ),\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offset-md-3 col-md-6 container card \",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mt-2\",\n        onSubmit: contactUsHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupFName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupLName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(FormControl // id=\"inlineFormInputGroupUsername\"\n            , {\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupEvent\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Event:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), [\"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Single Event\",\n              type: type,\n              id: `inline-${type}-1`,\n              name: \"eventTypeGrp\",\n              defaultChecked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Multiple Event\",\n              type: type,\n              id: `inline-${type}-2`,\n              name: \"eventTypeGrp\",\n              onChange: () => alert(\"Multiple event Selected\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, `inline-${type}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-5\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Select Event\",\n                onChange: e => {\n                  e.target.value === \"Other\" ? setSingleEvent(true) : setSingleEvent(false);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Select Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), eventOptions.map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.value\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-7\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                disabled: isSingleEvent == false // id=\"inlineFormInputGroupUsername\"\n                ,\n                placeholder: \"Other Event \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 \",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Event Start Date \\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"text-muted\" // isClearable\n                ,\n                closeOnScroll: true,\n                closeOnScroll: e => e.target === document // customInput={<ExampleCustomInput />}\n                ,\n                selected: startDate,\n                onChange: date => setStartDate(date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 \",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Event End Date \\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"text-muted\" // isClearable\n                ,\n                closeOnScroll: true,\n                closeOnScroll: e => e.target === document // customInput={<ExampleCustomInput />}\n                ,\n                selected: endDate,\n                onChange: date => setEndDate(date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Choose Country\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Choose Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"India\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), \"\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: region,\n                onChange: e => {\n                  setRegion(e.target.value); // if(zip){\n                  //   setZip(null);\n                  // //  setStateSelected(true);\n                  // }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Choose State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this), stateOptions.map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Zip Code\",\n                onChange: e => {\n                  setZip(e.target.value);\n                  fetchZipCode;\n                },\n                value: zip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Event Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Classic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Industrial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Vintage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Miscellaneous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactUs, \"9Qu0KPr4j2brjCIjG9cj6IFpr+g=\");\n\n_c = ContactUs;\nexport default ContactUs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"sources":["C:/Users/ayush.singh/Desktop/MERN/prod-v2/frontend/src/components/ContactUs.js"],"names":["React","useState","Menu","Axios","Form","Button","InputGroup","FormControl","DatePicker","ContactUs","startDate","setStartDate","Date","endDate","setEndDate","isSingleEvent","setSingleEvent","eventOptions","value","stateOptions","region","setRegion","isStateSelected","setStateSelected","zip","setZip","dummy","e","target","fetchZipCode","newData","length","get","then","response","i","data","map","res","id","message","status","postOffice","Name","Description","BranchType","DeliveryStatus","Taluk","Circle","District","Division","Region","State","Country","state","find","el","catch","error","console","log","contactUsHandler","event","preventDefault","alert","type","option","index","document","date"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Menu } from \"./Home.js\";\r\nimport \"./ContactUs.css\";\r\nimport Axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ContactUs = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [isSingleEvent, setSingleEvent] = useState(false);\r\n  //const [multipleEvent , setMultipleEvent] = useState('Multiple Event');\r\n  const eventOptions = [\r\n    { value: \"Wedding\" },\r\n    { value: \"Pre-wedding\" },\r\n    { value: \"Maternity\" },\r\n    { value: \"Baby Shower\" },\r\n    { value: \"Product Photoshoot\" },\r\n    { value: \"Event Photos\" },\r\n    { value: \"Fashion Photography\" },\r\n    { value: \"Other\" },\r\n  ];\r\n\r\n  const stateOptions = [\r\n    \"Andhra Pradesh\",\r\n    \"Arunachal Pradesh\",\r\n    \"Assam\",\r\n    \"Bihar\",\r\n    \"Chhattisgarh\",\r\n    \"Goa\",\r\n    \"Gujarat\",\r\n    \"Haryana\",\r\n    \"Himachal Pradesh\",\r\n    \"Jammu and Kashmir\",\r\n    \"Jharkhand\",\r\n    \"Karnataka\",\r\n    \"Kerala\",\r\n    \"Madhya Pradesh\",\r\n    \"Maharashtra\",\r\n    \"Manipur\",\r\n    \"Meghalaya\",\r\n    \"Mizoram\",\r\n    \"Nagaland\",\r\n    \"Odisha\",\r\n    \"Punjab\",\r\n    \"Rajasthan\",\r\n    \"Sikkim\",\r\n    \"Tamil Nadu\",\r\n    \"Telangana\",\r\n    \"Tripura\",\r\n    \"Uttar Pradesh\",\r\n    \"Uttarakhand\",\r\n    \"West Bengal\",\r\n  ];\r\n\r\n  let [region, setRegion] = useState(\"Choose State\");\r\n  let [isStateSelected, setStateSelected] = useState(false);\r\n  let [zip, setZip] = useState(\"\");\r\n\r\n  const dummy = (e) => {\r\n    setZip(e.target.value);\r\n    fetchZipCode;\r\n  }\r\n\r\n  const fetchZipCode = () => {\r\n    let newData = [{}];\r\n    if (zip.length === 6) {\r\n      Axios.get(`http://localhost:5000/region/${zip}`)\r\n        .then((response) => {\r\n          for (let i = 0; i < response.data.length; i++) {\r\n            newData = response.data.map((res) => ({\r\n              id: res.id,\r\n              message: res.message,\r\n              status: res.status,\r\n              postOffice: [\r\n                {\r\n                  Name: res.Name,\r\n                  Description: res.Description,\r\n                  BranchType: res.BranchType,\r\n                  DeliveryStatus: res.DeliveryStatus,\r\n                  Taluk: res.Taluk,\r\n                  Circle: res.Circle,\r\n                  District: res.District,\r\n                  Division: res.Division,\r\n                  Region: res.Region,\r\n                  State: res.State,\r\n                  Country: res.Country,\r\n                },\r\n              ],\r\n            }));\r\n          }\r\n\r\n          const state = newData.find((el) => el.id == \"277201\");\r\n          setRegion(state.status);\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n          // always executed\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const contactUsHandler = (event) => {\r\n    event.preventDefault();\r\n    alert(\"Form Submitted\");\r\n  };\r\n\r\n  // const ExampleCustomInput = forwardRef(\r\n  //   ({ value, onClick }, ref) => (\r\n  //     <button className=\"example-custom-input\" onClick={onClick} ref={ref}>\r\n  //       {value}\r\n  //     </button>\r\n  //   ),\r\n  // );\r\n  return (\r\n    <div className=\"bg\">\r\n      <Menu />\r\n      <br />\r\n      <div className=\"offset-md-3 col-md-6 container card \">\r\n        <Form className=\"mt-2\" onSubmit={contactUsHandler}>\r\n          <Form.Group controlId=\"formGroupFName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"First Name\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupLName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Last Name\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>@</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              &nbsp;\r\n              <FormControl\r\n                // id=\"inlineFormInputGroupUsername\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupEvent\">\r\n            <Form.Label>Event:</Form.Label>\r\n\r\n            {[\"radio\"].map((type) => (\r\n              <div key={`inline-${type}`} className=\"mb-3\">\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Single Event\"\r\n                  type={type}\r\n                  id={`inline-${type}-1`}\r\n                  name=\"eventTypeGrp\"\r\n                  defaultChecked\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Multiple Event\"\r\n                  type={type}\r\n                  id={`inline-${type}-2`}\r\n                  name=\"eventTypeGrp\"\r\n                  onChange={() => alert(\"Multiple event Selected\")}\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-5\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue=\"Select Event\"\r\n                  onChange={(e) => {\r\n                    e.target.value === \"Other\"\r\n                      ? setSingleEvent(true)\r\n                      : setSingleEvent(false);\r\n                  }}\r\n                >\r\n                  <option disabled>Select Event</option>\r\n                  {eventOptions.map((option, index) => {\r\n                    return (\r\n                      <option key={index} value={option.value}>\r\n                        {option.value}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </div>\r\n              <div className=\"col-md-7\">\r\n                <FormControl\r\n                  disabled={isSingleEvent == false}\r\n                  // id=\"inlineFormInputGroupUsername\"\r\n                  placeholder=\"Other Event \"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form.Group>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 \">\r\n              <Form.Group controlId=\"formGroupDate\">\r\n                <Form.Label>Event Start Date &nbsp;</Form.Label>\r\n                <DatePicker\r\n                  className=\"text-muted\"\r\n                  // isClearable\r\n                  closeOnScroll={true}\r\n                  closeOnScroll={(e) => e.target === document}\r\n                  // customInput={<ExampleCustomInput />}\r\n                  selected={startDate}\r\n                  onChange={(date) => setStartDate(date)}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className=\"col-md-6 \">\r\n              <Form.Group controlId=\"formGroupDate\">\r\n                <Form.Label>Event End Date &nbsp;</Form.Label>\r\n                <DatePicker\r\n                  className=\"text-muted\"\r\n                  // isClearable\r\n                  closeOnScroll={true}\r\n                  closeOnScroll={(e) => e.target === document}\r\n                  // customInput={<ExampleCustomInput />}\r\n                  selected={endDate}\r\n                  onChange={(date) => setEndDate(date)}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n          <Form.Group>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <Form.Control as=\"select\" defaultValue=\"Choose Country\">\r\n                  <option disabled>Choose Country</option>\r\n                  <option>India</option>\r\n                </Form.Control>\r\n                &nbsp;\r\n              </div>\r\n              <div className=\"col\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={region}\r\n                  onChange={(e) => {\r\n                    setRegion(e.target.value);\r\n                    // if(zip){\r\n                    //   setZip(null);\r\n                    // //  setStateSelected(true);\r\n                    // }\r\n                    \r\n                  }}\r\n                >\r\n                  <option disabled>Choose State</option>\r\n                  {stateOptions.map((option, index) => {\r\n                    return (\r\n                      <option key={index} value={option}>\r\n                        {option}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </div>\r\n              <div className=\"col\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Zip Code\"\r\n                  onChange={e => {setZip(e.target.value); fetchZipCode;}}\r\n                  value={zip}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control as=\"select\">\r\n              <option>Event Style</option>\r\n              <option>Classic</option>\r\n              <option>Industrial</option>\r\n              <option>Vintage</option>\r\n              <option>Miscellaneous</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"]},"metadata":{},"sourceType":"module"}