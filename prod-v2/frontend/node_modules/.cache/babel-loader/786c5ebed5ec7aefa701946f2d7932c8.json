{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush.singh\\\\Desktop\\\\MERN\\\\prod-v2\\\\frontend\\\\src\\\\components\\\\ContactUs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Menu } from \"./Home.js\";\nimport \"./ContactUs.css\";\nimport Axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactUs = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [isSingleEvent, setSingleEvent] = useState(false);\n  const [region, setRegion] = useState(\"Choose State\");\n  const [OtherEventName, setOtherEventName] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [isMultipleEvent, setMultipleEvent] = useState(false);\n  const initialFormState = {\n    userId: 101,\n    fName: \"\",\n    lName: \"\",\n    username: \"\",\n    events: [{\n      eventType: \"Single Event\",\n      eventName: \"\",\n      eventStartDate: \"\",\n      eventEndDate: \"\",\n      country: \"India\",\n      state: \"\",\n      region: \"\"\n    }],\n    eventCategory: \"\"\n  };\n  const [formData, setFormData] = useState(initialFormState);\n\n  const filterPassedTime = time => {\n    const currentDate = new Date();\n    const selectedDate = new Date(time);\n    return currentDate.getTime() < selectedDate.getTime();\n  };\n\n  const inputHandler = e => {\n    const newData = { ...formData\n    };\n    newData[e.target.name] = e.target.value;\n    setFormData(newData);\n    console.log(newData);\n  };\n\n  const regionSelectHandler = e => {\n    const newData = { ...formData\n    };\n    newData.events[0][e.target.name] = e.target.value;\n    setFormData(newData);\n    setRegion(e.target.value);\n\n    if (zip) {\n      setZip(\"\");\n    }\n  };\n\n  const eventSelectHandler = e => {\n    const newData = { ...formData\n    };\n    newData.events[0][e.target.name] = e.target.value;\n    setFormData(newData);\n    e.target.value === \"Other\" ? setSingleEvent(true) : setSingleEvent(false);\n    setOtherEventName(\"\");\n  };\n\n  const contactUsHandler = event => {\n    event.preventDefault();\n    Axios.post(\"http://localhost:5000/users/add\", formData).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const eventOptions = [{\n    value: \"Wedding\"\n  }, {\n    value: \"Pre-wedding\"\n  }, {\n    value: \"Maternity\"\n  }, {\n    value: \"Baby Shower\"\n  }, {\n    value: \"Product Photoshoot\"\n  }, {\n    value: \"Event Photos\"\n  }, {\n    value: \"Fashion Photography\"\n  }, {\n    value: \"Other\"\n  }];\n  const stateOptions = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL + '/cool-background.svg'})`,\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offset-md-3 col-md-6 container card \",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-2\",\n          onSubmit: contactUsHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGroupFName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"First Name\",\n              name: \"fName\",\n              value: formData.fName,\n              onChange: e => inputHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGroupLName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"lName\",\n              type: \"text\",\n              placeholder: \"Last Name\",\n              onChange: e => inputHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGroupEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: \"@\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(FormControl, {\n                name: \"username\",\n                type: \"email\",\n                placeholder: \"Username\",\n                onChange: e => inputHandler(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGroupEvent\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Event:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), [\"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                label: \"Single Event\",\n                type: type,\n                id: `inline-${type}-1`,\n                name: \"eventType\",\n                defaultChecked: true,\n                onClick: e => {\n                  const newData = { ...formData\n                  };\n                  newData.events[0][e.target.name] = \"Single Event\";\n                  setFormData(newData);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                label: \"Multiple Event\",\n                type: type,\n                id: `inline-${type}-2`,\n                name: \"eventType\",\n                onClick: e => {\n                  const newData = { ...formData\n                  };\n                  newData.events[0][e.target.name] = \"Multiple Event\";\n                  setFormData(newData);\n                  setMultipleEvent(true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, `inline-${type}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)), isMultipleEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"This shows when the radioYes input is clicked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-5\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  defaultValue: \"Select Event\",\n                  name: \"eventName\",\n                  onChange: e => eventSelectHandler(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"Select Event\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this), eventOptions.map((option, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.value,\n                      children: option.value\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-7\",\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  disabled: isSingleEvent === false,\n                  name: \"eventName\",\n                  onChange: e => {\n                    setOtherEventName(e.target.value);\n                    const newData = { ...formData\n                    };\n                    newData.events[0][e.target.name] = e.target.value;\n                    setFormData(newData);\n                  },\n                  placeholder: \"Other Event \",\n                  value: OtherEventName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 \",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGroupDate\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Event Start Date \\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                  placeholderText: \"Select Start Date\",\n                  peekNextMonth: true,\n                  showMonthDropdown: true,\n                  showYearDropdown: true,\n                  dropdownMode: \"select\",\n                  showTimeSelect: true,\n                  dateFormat: \" dd MMMM yyyy h:mm aa\",\n                  timeFormat: \"h:mm aa\",\n                  timeIntervals: 15,\n                  timeCaption: \"Time\",\n                  className: \"text-muted\",\n                  closeOnScroll: true,\n                  selected: startDate,\n                  minDate: new Date(),\n                  selectsStart: true,\n                  startDate: startDate,\n                  endDate: endDate,\n                  filterTime: filterPassedTime,\n                  onChangeRaw: e => e.preventDefault(),\n                  onChange: date => {\n                    setStartDate(date);\n                    const newData = { ...formData\n                    };\n                    newData.events[0].eventStartDate = date;\n                    setFormData(newData);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 \",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGroupDate\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Event End Date \\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                  placeholderText: \"Select End Date\",\n                  peekNextMonth: true,\n                  showMonthDropdown: true,\n                  showYearDropdown: true,\n                  dropdownMode: \"select\",\n                  showTimeSelect: true,\n                  dateFormat: \" dd MMMM yyyy h:mm aa\",\n                  timeFormat: \"h:mm aa\",\n                  timeIntervals: 15,\n                  timeCaption: \"Time\",\n                  className: \"text-muted\",\n                  closeOnScroll: true,\n                  selected: endDate,\n                  selectsEnd: true,\n                  startDate: startDate,\n                  endDate: endDate,\n                  minDate: startDate,\n                  filterTime: filterPassedTime,\n                  onChangeRaw: e => e.preventDefault(),\n                  onChange: date => {\n                    setEndDate(date);\n                    const newData = { ...formData\n                    };\n                    newData.events[0].eventEndDate = date;\n                    setFormData(newData);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  defaultValue: \"India\",\n                  name: \"country\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"Choose Country\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"India\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this), \"\\xA0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: region,\n                  name: \"state\",\n                  onChange: regionSelectHandler,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    disabled: true,\n                    children: \"Choose State\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 21\n                  }, this), stateOptions.map((option, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option,\n                      children: option\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  placeholder: \"Zip Code\",\n                  name: \"region\",\n                  onChange: e => {\n                    setZip(e.target.value);\n                    const newData = { ...formData\n                    };\n                    newData.events[0][e.target.name] = e.target.value;\n                    setFormData(newData);\n                  },\n                  value: zip\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"eventCategory\",\n              onChange: e => inputHandler(e),\n              defaultValue: \"Event Style\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                children: \"Event Style\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Classic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Industrial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Vintage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Miscellaneous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Create Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContactUs, \"p/GiIvaXXAjCNEUmoPu6o0nbOGE=\");\n\n_c = ContactUs;\nexport default ContactUs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"sources":["C:/Users/ayush.singh/Desktop/MERN/prod-v2/frontend/src/components/ContactUs.js"],"names":["React","useState","Menu","Axios","Form","Button","InputGroup","FormControl","DatePicker","ContactUs","startDate","setStartDate","endDate","setEndDate","isSingleEvent","setSingleEvent","region","setRegion","OtherEventName","setOtherEventName","zip","setZip","isMultipleEvent","setMultipleEvent","initialFormState","userId","fName","lName","username","events","eventType","eventName","eventStartDate","eventEndDate","country","state","eventCategory","formData","setFormData","filterPassedTime","time","currentDate","Date","selectedDate","getTime","inputHandler","e","newData","target","name","value","console","log","regionSelectHandler","eventSelectHandler","contactUsHandler","event","preventDefault","post","then","response","catch","error","eventOptions","stateOptions","backgroundImage","process","env","PUBLIC_URL","backgroundPosition","backgroundRepeat","backgroundSize","map","type","option","index","date"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Menu } from \"./Home.js\";\r\nimport \"./ContactUs.css\";\r\nimport Axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nconst ContactUs = () => {\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [isSingleEvent, setSingleEvent] = useState(false);\r\n  const [region, setRegion] = useState(\"Choose State\");\r\n  const [OtherEventName, setOtherEventName] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const [isMultipleEvent, setMultipleEvent] = useState(false);\r\n  const initialFormState = {\r\n    userId: 101,\r\n    fName: \"\",\r\n    lName: \"\",\r\n    username: \"\",\r\n    events: [\r\n      {\r\n        eventType: \"Single Event\",\r\n        eventName: \"\",\r\n        eventStartDate: \"\",\r\n        eventEndDate: \"\",\r\n        country: \"India\",\r\n        state: \"\",\r\n        region: \"\",\r\n      },\r\n    ],\r\n    eventCategory: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialFormState);\r\n  const filterPassedTime = (time) => {\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(time);\r\n\r\n    return currentDate.getTime() < selectedDate.getTime();\r\n  };\r\n\r\n  const inputHandler = (e) => {\r\n    const newData = { ...formData };\r\n    newData[e.target.name] = e.target.value;\r\n    setFormData(newData);\r\n    console.log(newData);\r\n  };\r\n\r\n  const regionSelectHandler = (e) => {\r\n    const newData = { ...formData };\r\n    newData.events[0][e.target.name] = e.target.value;\r\n    setFormData(newData);\r\n    setRegion(e.target.value);\r\n    if (zip) {\r\n      setZip(\"\");\r\n    }\r\n  };\r\n\r\n  const eventSelectHandler = (e) => {\r\n    const newData = { ...formData };\r\n    newData.events[0][e.target.name] = e.target.value;\r\n    setFormData(newData);\r\n    e.target.value === \"Other\" ? setSingleEvent(true) : setSingleEvent(false);\r\n    setOtherEventName(\"\");\r\n  };\r\n\r\n  const contactUsHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    Axios.post(\"http://localhost:5000/users/add\", formData)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const eventOptions = [\r\n    { value: \"Wedding\" },\r\n    { value: \"Pre-wedding\" },\r\n    { value: \"Maternity\" },\r\n    { value: \"Baby Shower\" },\r\n    { value: \"Product Photoshoot\" },\r\n    { value: \"Event Photos\" },\r\n    { value: \"Fashion Photography\" },\r\n    { value: \"Other\" },\r\n  ];\r\n\r\n  const stateOptions = [\r\n    \"Andhra Pradesh\",\r\n    \"Arunachal Pradesh\",\r\n    \"Assam\",\r\n    \"Bihar\",\r\n    \"Chhattisgarh\",\r\n    \"Goa\",\r\n    \"Gujarat\",\r\n    \"Haryana\",\r\n    \"Himachal Pradesh\",\r\n    \"Jammu and Kashmir\",\r\n    \"Jharkhand\",\r\n    \"Karnataka\",\r\n    \"Kerala\",\r\n    \"Madhya Pradesh\",\r\n    \"Maharashtra\",\r\n    \"Manipur\",\r\n    \"Meghalaya\",\r\n    \"Mizoram\",\r\n    \"Nagaland\",\r\n    \"Odisha\",\r\n    \"Punjab\",\r\n    \"Rajasthan\",\r\n    \"Sikkim\",\r\n    \"Tamil Nadu\",\r\n    \"Telangana\",\r\n    \"Tripura\",\r\n    \"Uttar Pradesh\",\r\n    \"Uttarakhand\",\r\n    \"West Bengal\",\r\n  ];\r\n\r\n \r\n    \r\n    \r\n      \r\n  \r\n      \r\n  \r\n  return (\r\n    <>\r\n      <Menu />\r\n      <div \r\n      style={{ \r\n        backgroundImage: `url(${process.env.PUBLIC_URL + '/cool-background.svg'})`,\r\n        backgroundPosition: \"center\",\r\n         backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\"\r\n      }}\r\n      >\r\n        <br />\r\n        <br />\r\n        <div className=\"offset-md-3 col-md-6 container card \">\r\n          <Form className=\"mt-2\" onSubmit={contactUsHandler}>\r\n            <Form.Group controlId=\"formGroupFName\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n                name=\"fName\"\r\n                value={formData.fName}\r\n                onChange={(e) => inputHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGroupLName\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                name=\"lName\"\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"\r\n                onChange={(e) => inputHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGroupEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                &nbsp;\r\n                <FormControl\r\n                  name=\"username\"\r\n                  type=\"email\"\r\n                  placeholder=\"Username\"\r\n                  onChange={(e) => inputHandler(e)}\r\n                />\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGroupEvent\">\r\n              <Form.Label>Event:</Form.Label>\r\n\r\n              {[\"radio\"].map((type) => (\r\n                <div key={`inline-${type}`} className=\"mb-3\">\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Single Event\"\r\n                    type={type}\r\n                    id={`inline-${type}-1`}\r\n                    name=\"eventType\"\r\n                    defaultChecked\r\n                    onClick={(e) => {\r\n                      const newData = { ...formData };\r\n                      newData.events[0][e.target.name] = \"Single Event\";\r\n                      setFormData(newData);\r\n                    }}\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Multiple Event\"\r\n                    type={type}\r\n                    id={`inline-${type}-2`}\r\n                    name=\"eventType\"\r\n                    onClick={(e) => {\r\n                      const newData = { ...formData };\r\n                      newData.events[0][e.target.name] = \"Multiple Event\";\r\n                      setFormData(newData);\r\n                      setMultipleEvent(true);\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n              {isMultipleEvent &&  (<div>This shows when the radioYes input is clicked</div>)}\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    defaultValue=\"Select Event\"\r\n                    name=\"eventName\"\r\n                    onChange={(e) => eventSelectHandler(e)}\r\n                  >\r\n                    <option disabled>Select Event</option>\r\n                    {eventOptions.map((option, index) => {\r\n                      return (\r\n                        <option key={index} value={option.value}>\r\n                          {option.value}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Form.Control>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <FormControl\r\n                    disabled={isSingleEvent === false}\r\n                    name=\"eventName\"\r\n                    onChange={(e) => {\r\n                      setOtherEventName(e.target.value);\r\n                      const newData = { ...formData };\r\n                      newData.events[0][e.target.name] = e.target.value;\r\n                      setFormData(newData);\r\n                    }}\r\n                    placeholder=\"Other Event \"\r\n                    value={OtherEventName}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Form.Group>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 \">\r\n                <Form.Group controlId=\"formGroupDate\">\r\n                  <Form.Label>Event Start Date &nbsp;</Form.Label>\r\n                  <DatePicker\r\n                    placeholderText=\"Select Start Date\"\r\n                    peekNextMonth\r\n                    showMonthDropdown\r\n                    showYearDropdown\r\n                    dropdownMode=\"select\"\r\n                    showTimeSelect\r\n                    dateFormat=\" dd MMMM yyyy h:mm aa\"\r\n                    timeFormat=\"h:mm aa\"\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Time\"\r\n                    className=\"text-muted\"\r\n                    closeOnScroll={true}\r\n                    selected={startDate}\r\n                    minDate={new Date()}\r\n                    selectsStart\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    filterTime={filterPassedTime}\r\n                    onChangeRaw={(e) => e.preventDefault()}\r\n                    onChange={(date) => {\r\n                      setStartDate(date);\r\n                      const newData = { ...formData };\r\n                      newData.events[0].eventStartDate = date;\r\n                      setFormData(newData);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </div>\r\n              <div className=\"col-md-6 \">\r\n                <Form.Group controlId=\"formGroupDate\">\r\n                  <Form.Label>Event End Date &nbsp;</Form.Label>\r\n                  <DatePicker\r\n                    placeholderText=\"Select End Date\"\r\n                    peekNextMonth\r\n                    showMonthDropdown\r\n                    showYearDropdown\r\n                    dropdownMode=\"select\"\r\n                    showTimeSelect\r\n                    dateFormat=\" dd MMMM yyyy h:mm aa\"\r\n                    timeFormat=\"h:mm aa\"\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Time\"\r\n                    className=\"text-muted\"\r\n                    closeOnScroll={true}\r\n                    selected={endDate}\r\n                    selectsEnd\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    minDate={startDate}\r\n                    filterTime={filterPassedTime}\r\n                    onChangeRaw={(e) => e.preventDefault()}\r\n                    onChange={(date) => {\r\n                      setEndDate(date);\r\n                      const newData = { ...formData };\r\n                      newData.events[0].eventEndDate = date;\r\n                      setFormData(newData);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </div>\r\n            </div>\r\n            <Form.Group>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Form.Control as=\"select\" defaultValue=\"India\" name=\"country\">\r\n                    <option disabled>Choose Country</option>\r\n                    <option>India</option>\r\n                  </Form.Control>\r\n                  &nbsp;\r\n                </div>\r\n                <div className=\"col\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={region}\r\n                    name=\"state\"\r\n                    onChange={regionSelectHandler}\r\n                  >\r\n                    <option disabled>Choose State</option>\r\n                    {stateOptions.map((option, index) => {\r\n                      return (\r\n                        <option key={index} value={option}>\r\n                          {option}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Form.Control>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"Zip Code\"\r\n                    name=\"region\"\r\n                    onChange={(e) => {\r\n                      setZip(e.target.value);\r\n                      const newData = { ...formData };\r\n                      newData.events[0][e.target.name] = e.target.value;\r\n                      setFormData(newData);\r\n                    }}\r\n                    value={zip}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"eventCategory\"\r\n                onChange={(e) => inputHandler(e)}\r\n                defaultValue=\"Event Style\"\r\n              >\r\n                <option disabled>Event Style</option>\r\n                <option>Classic</option>\r\n                <option>Industrial</option>\r\n                <option>Vintage</option>\r\n                <option>Miscellaneous</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Create Event\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"]},"metadata":{},"sourceType":"module"}