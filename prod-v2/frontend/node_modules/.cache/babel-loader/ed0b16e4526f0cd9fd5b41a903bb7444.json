{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush.singh\\\\Desktop\\\\MERN\\\\prod-v2\\\\frontend\\\\src\\\\components\\\\ContactUs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Menu } from \"./Home.js\";\nimport \"./ContactUs.css\";\nimport Axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactUs = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [isSingleEvent, setSingleEvent] = useState(false);\n  const [region, setRegion] = useState(\"Choose State\");\n  const [OtherEventName, setOtherEventName] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const initialFormState = {\n    userId: 101,\n    fName: \"\",\n    lName: \"\",\n    username: \"\",\n    events: [{\n      eventType: \"Single Event\",\n      eventName: \"\",\n      eventStartDate: \"\",\n      eventEndDate: \"\",\n      country: \"India\",\n      state: \"\",\n      region: \"\"\n    }],\n    eventCategory: \"\"\n  };\n  const [formData, setFormData] = useState(initialFormState);\n\n  const filterPassedTime = time => {\n    const currentDate = new Date();\n    const selectedDate = new Date(time);\n    return currentDate.getTime() < selectedDate.getTime();\n  };\n\n  const inputHandler = e => {\n    const newData = { ...formData\n    };\n    newData[e.target.name] = e.target.value;\n    setFormData(newData);\n    console.log(newData);\n  };\n\n  const regionSelectHandler = e => {\n    const newData = { ...formData\n    };\n    newData.events[0][e.target.name] = e.target.value;\n    setFormData(newData);\n    setRegion(e.target.value);\n\n    if (zip) {\n      setZip(\"\");\n    }\n  };\n\n  const eventSelectHandler = e => {\n    const newData = { ...formData\n    };\n    newData.events[0][e.target.name] = e.target.value;\n    setFormData(newData);\n    e.target.value === \"Other\" ? setSingleEvent(true) : setSingleEvent(false);\n    setOtherEventName(\"\");\n  };\n\n  const contactUsHandler = event => {\n    event.preventDefault();\n    Axios.post(\"http://localhost:5000/users/add\", formData).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const eventOptions = [{\n    value: \"Wedding\"\n  }, {\n    value: \"Pre-wedding\"\n  }, {\n    value: \"Maternity\"\n  }, {\n    value: \"Baby Shower\"\n  }, {\n    value: \"Product Photoshoot\"\n  }, {\n    value: \"Event Photos\"\n  }, {\n    value: \"Fashion Photography\"\n  }, {\n    value: \"Other\"\n  }];\n  const stateOptions = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offset-md-3 col-md-6 container card \",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mt-2\",\n        onSubmit: contactUsHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupFName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"First Name\",\n            name: \"fName\",\n            value: formData.fName,\n            onChange: e => inputHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupLName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"lName\",\n            type: \"text\",\n            placeholder: \"Last Name\",\n            onChange: e => inputHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"username\",\n              type: \"email\",\n              placeholder: \"Username\",\n              onChange: e => inputHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupEvent\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Event:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), [\"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Single Event\",\n              type: type,\n              id: `inline-${type}-1`,\n              name: \"eventType\",\n              defaultChecked: true,\n              onClick: e => {\n                const newData = { ...formData\n                };\n                newData.events[0][e.target.name] = \"Single Event\";\n                setFormData(newData);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Multiple Event\",\n              type: type,\n              id: `inline-${type}-2`,\n              name: \"eventType\",\n              onClick: e => {\n                const newData = { ...formData\n                };\n                newData.events[0][e.target.name] = \"Multiple Event\";\n                setFormData(newData);\n\n                /*#__PURE__*/\n                _jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"button\",\n                  children: \"Add More Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, `inline-${type}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-5\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Select Event\",\n                name: \"eventName\",\n                onChange: e => eventSelectHandler(e),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Select Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), eventOptions.map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.value\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-7\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                disabled: isSingleEvent === false,\n                name: \"eventName\",\n                onChange: e => {\n                  setOtherEventName(e.target.value);\n                  const newData = { ...formData\n                  };\n                  newData.events[0][e.target.name] = e.target.value;\n                  setFormData(newData);\n                },\n                placeholder: \"Other Event \",\n                value: OtherEventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 \",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Event Start Date \\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                placeholderText: \"Select Start Date\",\n                peekNextMonth: true,\n                showMonthDropdown: true,\n                showYearDropdown: true,\n                dropdownMode: \"select\",\n                showTimeSelect: true,\n                dateFormat: \" dd MMMM yyyy h:mm aa\",\n                timeFormat: \"h:mm aa\",\n                timeIntervals: 15,\n                timeCaption: \"Time\",\n                className: \"text-muted\",\n                closeOnScroll: true,\n                selected: startDate,\n                minDate: new Date(),\n                selectsStart: true,\n                startDate: startDate,\n                endDate: endDate,\n                filterTime: filterPassedTime,\n                onChangeRaw: e => e.preventDefault(),\n                onChange: date => {\n                  setStartDate(date);\n                  const newData = { ...formData\n                  };\n                  newData.events[0].eventStartDate = date;\n                  setFormData(newData);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 \",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Event End Date \\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                placeholderText: \"Select End Date\",\n                peekNextMonth: true,\n                showMonthDropdown: true,\n                showYearDropdown: true,\n                dropdownMode: \"select\",\n                showTimeSelect: true,\n                dateFormat: \" dd MMMM yyyy h:mm aa\",\n                timeFormat: \"h:mm aa\",\n                timeIntervals: 15,\n                timeCaption: \"Time\",\n                className: \"text-muted\",\n                closeOnScroll: true,\n                selected: endDate,\n                selectsEnd: true,\n                startDate: startDate,\n                endDate: endDate,\n                minDate: startDate,\n                filterTime: filterPassedTime,\n                onChangeRaw: e => e.preventDefault(),\n                onChange: date => {\n                  setEndDate(date);\n                  const newData = { ...formData\n                  };\n                  newData.events[0].eventEndDate = date;\n                  setFormData(newData);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"India\",\n                name: \"country\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Choose Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"India\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), \"\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: region,\n                name: \"state\",\n                onChange: regionSelectHandler,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Choose State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), stateOptions.map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Zip Code\",\n                name: \"region\",\n                onChange: e => {\n                  setZip(e.target.value);\n                  const newData = { ...formData\n                  };\n                  newData.events[0][e.target.name] = e.target.value;\n                  setFormData(newData);\n                },\n                value: zip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"eventCategory\",\n            onChange: e => inputHandler(e),\n            defaultValue: \"Event Style\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"Event Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Classic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Industrial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Vintage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Miscellaneous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactUs, \"j+POoEuI5WORgemQVEYlwomrHWM=\");\n\n_c = ContactUs;\nexport default ContactUs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"sources":["C:/Users/ayush.singh/Desktop/MERN/prod-v2/frontend/src/components/ContactUs.js"],"names":["React","useState","Menu","Axios","Form","Button","InputGroup","FormControl","DatePicker","ContactUs","startDate","setStartDate","endDate","setEndDate","isSingleEvent","setSingleEvent","region","setRegion","OtherEventName","setOtherEventName","zip","setZip","initialFormState","userId","fName","lName","username","events","eventType","eventName","eventStartDate","eventEndDate","country","state","eventCategory","formData","setFormData","filterPassedTime","time","currentDate","Date","selectedDate","getTime","inputHandler","e","newData","target","name","value","console","log","regionSelectHandler","eventSelectHandler","contactUsHandler","event","preventDefault","post","then","response","catch","error","eventOptions","stateOptions","map","type","option","index","date"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Menu } from \"./Home.js\";\r\nimport \"./ContactUs.css\";\r\nimport Axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ContactUs = () => {\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [isSingleEvent, setSingleEvent] = useState(false);\r\n  const [region, setRegion] = useState(\"Choose State\");\r\n  const [OtherEventName, setOtherEventName] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const initialFormState = {\r\n    userId: 101,\r\n    fName: \"\",\r\n    lName: \"\",\r\n    username: \"\",\r\n    events: [\r\n      {\r\n        eventType: \"Single Event\",\r\n        eventName: \"\",\r\n        eventStartDate: \"\",\r\n        eventEndDate: \"\",\r\n        country: \"India\",\r\n        state: \"\",\r\n        region: \"\",\r\n      },\r\n    ],\r\n    eventCategory: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialFormState);\r\n  const filterPassedTime = time => {\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(time);\r\n\r\n    return currentDate.getTime() < selectedDate.getTime();\r\n  }\r\n\r\n  const inputHandler = (e) => {\r\n    const newData = { ...formData };\r\n    newData[e.target.name] = e.target.value;\r\n    setFormData(newData);\r\n    console.log(newData);\r\n  };\r\n\r\n  const regionSelectHandler = (e) => {\r\n    const newData = { ...formData };\r\n    newData.events[0][e.target.name] = e.target.value;\r\n    setFormData(newData);\r\n    setRegion(e.target.value);\r\n    if (zip) {\r\n      setZip(\"\");\r\n    }\r\n  };\r\n\r\n  const eventSelectHandler = (e) => {\r\n    const newData = { ...formData };\r\n    newData.events[0][e.target.name] = e.target.value;\r\n    setFormData(newData);\r\n    e.target.value === \"Other\" ? setSingleEvent(true) : setSingleEvent(false);\r\n    setOtherEventName(\"\");\r\n  };\r\n\r\n  const contactUsHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    Axios.post(\"http://localhost:5000/users/add\", formData)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const eventOptions = [\r\n    { value: \"Wedding\" },\r\n    { value: \"Pre-wedding\" },\r\n    { value: \"Maternity\" },\r\n    { value: \"Baby Shower\" },\r\n    { value: \"Product Photoshoot\" },\r\n    { value: \"Event Photos\" },\r\n    { value: \"Fashion Photography\" },\r\n    { value: \"Other\" },\r\n  ];\r\n\r\n  const stateOptions = [\r\n    \"Andhra Pradesh\",\r\n    \"Arunachal Pradesh\",\r\n    \"Assam\",\r\n    \"Bihar\",\r\n    \"Chhattisgarh\",\r\n    \"Goa\",\r\n    \"Gujarat\",\r\n    \"Haryana\",\r\n    \"Himachal Pradesh\",\r\n    \"Jammu and Kashmir\",\r\n    \"Jharkhand\",\r\n    \"Karnataka\",\r\n    \"Kerala\",\r\n    \"Madhya Pradesh\",\r\n    \"Maharashtra\",\r\n    \"Manipur\",\r\n    \"Meghalaya\",\r\n    \"Mizoram\",\r\n    \"Nagaland\",\r\n    \"Odisha\",\r\n    \"Punjab\",\r\n    \"Rajasthan\",\r\n    \"Sikkim\",\r\n    \"Tamil Nadu\",\r\n    \"Telangana\",\r\n    \"Tripura\",\r\n    \"Uttar Pradesh\",\r\n    \"Uttarakhand\",\r\n    \"West Bengal\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Menu />\r\n      <br />\r\n      <div className=\"offset-md-3 col-md-6 container card \">\r\n        <Form className=\"mt-2\" onSubmit={contactUsHandler}>\r\n          <Form.Group controlId=\"formGroupFName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              name=\"fName\"\r\n              value={formData.fName}\r\n              onChange={(e) => inputHandler(e)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupLName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              name=\"lName\"\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              onChange={(e) => inputHandler(e)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>@</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              &nbsp;\r\n              <FormControl\r\n                name=\"username\"\r\n                type=\"email\"\r\n                placeholder=\"Username\"\r\n                onChange={(e) => inputHandler(e)}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupEvent\">\r\n            <Form.Label>Event:</Form.Label>\r\n\r\n            {[\"radio\"].map((type) => (\r\n              <div key={`inline-${type}`} className=\"mb-3\">\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Single Event\"\r\n                  type={type}\r\n                  id={`inline-${type}-1`}\r\n                  name=\"eventType\"\r\n                  defaultChecked\r\n                  onClick={(e) => {\r\n                    const newData = { ...formData };\r\n                    newData.events[0][e.target.name] = \"Single Event\";\r\n                    setFormData(newData);\r\n                  }}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Multiple Event\"\r\n                  type={type}\r\n                  id={`inline-${type}-2`}\r\n                  name=\"eventType\"\r\n                  onClick={(e) => {\r\n                    const newData = { ...formData };\r\n                    newData.events[0][e.target.name] = \"Multiple Event\";\r\n                    setFormData(newData);\r\n                    <Button variant=\"primary\" type=\"button\">Add More Event</Button>\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-5\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue=\"Select Event\"\r\n                  name=\"eventName\"\r\n                  onChange={(e) => eventSelectHandler(e)}\r\n                >\r\n                  <option disabled>Select Event</option>\r\n                  {eventOptions.map((option, index) => {\r\n                    return (\r\n                      <option key={index} value={option.value}>\r\n                        {option.value}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </div>\r\n              <div className=\"col-md-7\">\r\n                <FormControl\r\n                  disabled={isSingleEvent === false}\r\n                  name=\"eventName\"\r\n                  onChange={(e) => {\r\n                    setOtherEventName(e.target.value);\r\n                    const newData = { ...formData };\r\n                    newData.events[0][e.target.name] = e.target.value;\r\n                    setFormData(newData);\r\n                  }}\r\n                  placeholder=\"Other Event \"\r\n                  value={OtherEventName}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form.Group>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 \">\r\n              <Form.Group controlId=\"formGroupDate\">\r\n                <Form.Label>Event Start Date &nbsp;</Form.Label>\r\n                <DatePicker\r\n                  placeholderText=\"Select Start Date\"\r\n                  peekNextMonth\r\n                  showMonthDropdown\r\n                  showYearDropdown\r\n                  dropdownMode=\"select\"\r\n                  showTimeSelect\r\n                  dateFormat=\" dd MMMM yyyy h:mm aa\"\r\n                  timeFormat=\"h:mm aa\"\r\n                  timeIntervals={15}\r\n                  timeCaption=\"Time\"\r\n                  className=\"text-muted\"\r\n                  closeOnScroll={true}\r\n                  selected={startDate}\r\n                  minDate={new Date()}\r\n                  selectsStart\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  filterTime={filterPassedTime}\r\n                  onChangeRaw = {(e) => e.preventDefault()}\r\n                  onChange={(date) => {\r\n                    setStartDate(date);\r\n                    const newData = { ...formData };\r\n                    newData.events[0].eventStartDate = date;\r\n                    setFormData(newData);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className=\"col-md-6 \">\r\n              <Form.Group controlId=\"formGroupDate\">\r\n                <Form.Label>Event End Date &nbsp;</Form.Label>\r\n                <DatePicker\r\n                  placeholderText=\"Select End Date\"\r\n                  peekNextMonth\r\n                  showMonthDropdown\r\n                  showYearDropdown\r\n                  dropdownMode=\"select\"\r\n                  showTimeSelect\r\n                  dateFormat=\" dd MMMM yyyy h:mm aa\"\r\n                  timeFormat=\"h:mm aa\"\r\n                  timeIntervals={15}\r\n                  timeCaption=\"Time\"\r\n                  className=\"text-muted\"\r\n                  closeOnScroll={true}\r\n                  selected={endDate}\r\n                  selectsEnd\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  minDate={startDate}\r\n                  filterTime={filterPassedTime}\r\n                  onChangeRaw = {(e) => e.preventDefault()}\r\n                  onChange={(date) => {\r\n                    setEndDate(date);\r\n                    const newData = { ...formData };\r\n                    newData.events[0].eventEndDate = date;\r\n                    setFormData(newData);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n          <Form.Group>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <Form.Control as=\"select\" defaultValue=\"India\" name=\"country\">\r\n                  <option disabled>Choose Country</option>\r\n                  <option>India</option>\r\n                </Form.Control>\r\n                &nbsp;\r\n              </div>\r\n              <div className=\"col\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={region}\r\n                  name=\"state\"\r\n                  onChange={regionSelectHandler}\r\n                >\r\n                  <option disabled>Choose State</option>\r\n                  {stateOptions.map((option, index) => {\r\n                    return (\r\n                      <option key={index} value={option}>\r\n                        {option}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </div>\r\n              <div className=\"col\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Zip Code\"\r\n                  name=\"region\"\r\n                  onChange={(e) => {\r\n                    setZip(e.target.value);\r\n                    const newData = { ...formData };\r\n                    newData.events[0][e.target.name] = e.target.value;\r\n                    setFormData(newData);\r\n                  }}\r\n                  value={zip}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"eventCategory\"\r\n              onChange={(e) => inputHandler(e)}\r\n              defaultValue=\"Event Style\"\r\n            >\r\n              <option disabled>Event Style</option>\r\n              <option>Classic</option>\r\n              <option>Industrial</option>\r\n              <option>Vintage</option>\r\n              <option>Miscellaneous</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"]},"metadata":{},"sourceType":"module"}