{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush.singh\\\\Desktop\\\\MERN\\\\prod-v2\\\\frontend\\\\src\\\\components\\\\ContactUs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Menu } from \"./Home.js\";\nimport \"./ContactUs.css\";\nimport Axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactUs = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [isSingleEvent, setSingleEvent] = useState(false);\n  const [region, setRegion] = useState(\"Choose State\");\n  const [OtherEventName, setOtherEventName] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const initialFormState = {\n    fName: \"\",\n    lName: \"\",\n    username: \"\",\n    events: [{\n      eventType: \"Single Event\",\n      eventName: \"\",\n      eventStartDate: {\n        startDate\n      },\n      eventEndDate: {\n        endDate\n      },\n      country: \"India\",\n      state: {\n        region\n      },\n      region: {\n        zip\n      }\n    }],\n    eventCategory: \"\"\n  };\n  const [formData, setFormData] = useState(initialFormState);\n\n  const inputHandler = e => {\n    setFormData(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    console.log(formData.fName);\n  };\n\n  const subArrayObjects = e => {\n    setFormData({\n      events: formData.events.map(prevState => ({ ...prevState,\n        [e.target.name]: e.target.value\n      }))\n    });\n    setOtherEventName(e.target.value);\n    setOtherEventName(\"\");\n  };\n\n  const selectHandler = e => {\n    e.target.value === 'Other' ? setSingleEvent(true) : setSingleEvent(false);\n    setFormData({\n      events: formData.events.map(prevState => ({ ...prevState,\n        [e.target.name]: e.target.value\n      }))\n    });\n  };\n\n  const contactUsHandler = event => {\n    event.preventDefault();\n    Object.entries(formData).map(item => {\n      console.log(item);\n    });\n  }; //const [multipleEvent , setMultipleEvent] = useState('Multiple Event');\n\n\n  const eventOptions = [{\n    value: \"Wedding\"\n  }, {\n    value: \"Pre-wedding\"\n  }, {\n    value: \"Maternity\"\n  }, {\n    value: \"Baby Shower\"\n  }, {\n    value: \"Product Photoshoot\"\n  }, {\n    value: \"Event Photos\"\n  }, {\n    value: \"Fashion Photography\"\n  }, {\n    value: \"Other\"\n  }];\n  const stateOptions = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"];\n\n  const fetchZipCode = e => {\n    setZip(e.target.value);\n    let newData = [{}];\n\n    if (e.target.value.length === 6) {\n      Axios.get(`http://localhost:5000/region/${e.target.value}`).then(response => {\n        for (let i = 0; i < response.data.length; i++) {\n          newData = response.data.map(res => ({\n            id: res.id,\n            message: res.message,\n            status: res.status,\n            postOffice: [{\n              Name: res.Name,\n              Description: res.Description,\n              BranchType: res.BranchType,\n              DeliveryStatus: res.DeliveryStatus,\n              Taluk: res.Taluk,\n              Circle: res.Circle,\n              District: res.District,\n              Division: res.Division,\n              Region: res.Region,\n              State: res.State,\n              Country: res.Country\n            }]\n          }));\n        }\n\n        const state = newData.find(el => el.id == \"277201\");\n        setRegion(state.status);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {// always executed\n      });\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offset-md-3 col-md-6 container card \",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mt-2\",\n        onSubmit: contactUsHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupFName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"First Name\",\n            name: \"fName\",\n            value: formData.fName,\n            onChange: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupLName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"lName\",\n            type: \"text\",\n            placeholder: \"Last Name\",\n            onChange: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(FormControl, {\n              name: \"username\",\n              type: \"email\",\n              placeholder: \"Username\",\n              onChange: inputHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGroupEvent\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Event:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), [\"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Single Event\",\n              type: type,\n              id: `inline-${type}-1`,\n              name: \"eventType\",\n              defaultChecked: true,\n              onClick: () => {\n                setFormData({\n                  events: formData.events.map(prevState => ({ ...prevState,\n                    eventType: \"Single Event\"\n                  }))\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Multiple Event\",\n              type: type,\n              id: `inline-${type}-2`,\n              name: \"eventType\",\n              onClick: () => {\n                setFormData({\n                  events: formData.events.map(prevState => ({ ...prevState,\n                    eventType: \"Multiple Event\"\n                  }))\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, `inline-${type}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-5\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Select Event\",\n                name: \"eventName\",\n                onChange: selectHandler,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Select Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this), eventOptions.map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.value\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-7\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                disabled: isSingleEvent === false,\n                name: \"eventName\",\n                onChange: subArrayObjects,\n                placeholder: \"Other Event \",\n                value: OtherEventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 \",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Event Start Date \\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                required: true,\n                className: \"text-muted\",\n                closeOnScroll: true,\n                closeOnScroll: e => e.target === document,\n                selected: startDate,\n                onChange: useCallback(date => {\n                  setStartDate(date);\n                  setFormData({\n                    events: formData.events.map(prevState => ({ ...prevState,\n                      eventStartDate: date\n                    }))\n                  });\n                }, [])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 \",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Event End Date \\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                required: true,\n                className: \"text-muted\",\n                closeOnScroll: true,\n                closeOnScroll: e => e.target === document,\n                selected: endDate,\n                onChange: useCallback(date => {\n                  setEndDate(date);\n                  setFormData({\n                    events: formData.events.map(prevState => ({ ...prevState,\n                      eventEndDate: date\n                    }))\n                  });\n                }, [])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"India\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Choose Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"India\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), \"\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: region,\n                onChange: e => {\n                  setRegion(e.target.value);\n\n                  if (zip) {\n                    setZip(\"\");\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Choose State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this), stateOptions.map((option, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Zip Code\",\n                onChange: fetchZipCode,\n                value: zip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"eventCategory\",\n            onChange: inputHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"Event Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Classic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Industrial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Vintage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Miscellaneous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactUs, \"05yYAQHikAj+9fq5gnD+wF7I44Y=\");\n\n_c = ContactUs;\nexport default ContactUs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"sources":["C:/Users/ayush.singh/Desktop/MERN/prod-v2/frontend/src/components/ContactUs.js"],"names":["React","useState","useCallback","useEffect","Menu","Axios","Form","Button","InputGroup","FormControl","DatePicker","ContactUs","startDate","setStartDate","Date","endDate","setEndDate","isSingleEvent","setSingleEvent","region","setRegion","OtherEventName","setOtherEventName","zip","setZip","initialFormState","fName","lName","username","events","eventType","eventName","eventStartDate","eventEndDate","country","state","eventCategory","formData","setFormData","inputHandler","e","prevState","target","name","value","console","log","subArrayObjects","map","selectHandler","contactUsHandler","event","preventDefault","Object","entries","item","eventOptions","stateOptions","fetchZipCode","newData","length","get","then","response","i","data","res","id","message","status","postOffice","Name","Description","BranchType","DeliveryStatus","Taluk","Circle","District","Division","Region","State","Country","find","el","catch","error","type","option","index","document","date"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useCallback , useEffect } from \"react\";\r\nimport { Menu } from \"./Home.js\";\r\nimport \"./ContactUs.css\";\r\nimport Axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ContactUs = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [isSingleEvent, setSingleEvent] = useState(false);\r\n  const [region, setRegion] = useState(\"Choose State\");\r\n  const [OtherEventName , setOtherEventName] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const initialFormState = \r\n  {\r\n    fName: \"\",\r\n    lName: \"\",\r\n    username: \"\",\r\n    events: [\r\n      {\r\n        eventType: \"Single Event\",\r\n        eventName: \"\",\r\n        eventStartDate: { startDate },\r\n        eventEndDate: { endDate },\r\n        country: \"India\",\r\n        state: { region },\r\n        region: { zip },\r\n      },\r\n    ],\r\n    eventCategory: \"\",\r\n  }\r\n\r\n  const [formData, setFormData] = useState(initialFormState);\r\n\r\n  \r\n  const inputHandler = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n    console.log(formData.fName);\r\n  }\r\n\r\n  const subArrayObjects = (e) => {\r\n    setFormData({\r\n      events: formData.events.map((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: e.target.value,\r\n      })),\r\n    });\r\n    setOtherEventName( e.target.value );\r\n    setOtherEventName(\"\");\r\n  }\r\n\r\n\r\n  const selectHandler = (e) => {\r\n    e.target.value === 'Other'\r\n       ?setSingleEvent(true)\r\n      :setSingleEvent(false);\r\n    setFormData({\r\n      events: formData.events.map((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: e.target.value,\r\n      }))\r\n    })\r\n  }\r\n\r\n  const contactUsHandler = (event) => {\r\n    event.preventDefault();\r\n    Object.entries(formData).map((item) => {\r\n      console.log(item);\r\n    });\r\n  };\r\n\r\n  //const [multipleEvent , setMultipleEvent] = useState('Multiple Event');\r\n  const eventOptions = [\r\n    { value: \"Wedding\" },\r\n    { value: \"Pre-wedding\" },\r\n    { value: \"Maternity\" },\r\n    { value: \"Baby Shower\" },\r\n    { value: \"Product Photoshoot\" },\r\n    { value: \"Event Photos\" },\r\n    { value: \"Fashion Photography\" },\r\n    { value: \"Other\" },\r\n  ];\r\n\r\n  const stateOptions = [\r\n    \"Andhra Pradesh\",\r\n    \"Arunachal Pradesh\",\r\n    \"Assam\",\r\n    \"Bihar\",\r\n    \"Chhattisgarh\",\r\n    \"Goa\",\r\n    \"Gujarat\",\r\n    \"Haryana\",\r\n    \"Himachal Pradesh\",\r\n    \"Jammu and Kashmir\",\r\n    \"Jharkhand\",\r\n    \"Karnataka\",\r\n    \"Kerala\",\r\n    \"Madhya Pradesh\",\r\n    \"Maharashtra\",\r\n    \"Manipur\",\r\n    \"Meghalaya\",\r\n    \"Mizoram\",\r\n    \"Nagaland\",\r\n    \"Odisha\",\r\n    \"Punjab\",\r\n    \"Rajasthan\",\r\n    \"Sikkim\",\r\n    \"Tamil Nadu\",\r\n    \"Telangana\",\r\n    \"Tripura\",\r\n    \"Uttar Pradesh\",\r\n    \"Uttarakhand\",\r\n    \"West Bengal\",\r\n  ];\r\n\r\n  const fetchZipCode = (e) => {\r\n    setZip(e.target.value);\r\n    let newData = [{}];\r\n    if (e.target.value.length === 6) {\r\n      Axios.get(`http://localhost:5000/region/${e.target.value}`)\r\n        .then((response) => {\r\n          for (let i = 0; i < response.data.length; i++) {\r\n            newData = response.data.map((res) => ({\r\n              id: res.id,\r\n              message: res.message,\r\n              status: res.status,\r\n              postOffice: [\r\n                {\r\n                  Name: res.Name,\r\n                  Description: res.Description,\r\n                  BranchType: res.BranchType,\r\n                  DeliveryStatus: res.DeliveryStatus,\r\n                  Taluk: res.Taluk,\r\n                  Circle: res.Circle,\r\n                  District: res.District,\r\n                  Division: res.Division,\r\n                  Region: res.Region,\r\n                  State: res.State,\r\n                  Country: res.Country,\r\n                },\r\n              ],\r\n            }));\r\n          }\r\n\r\n          const state = newData.find((el) => el.id == \"277201\");\r\n          setRegion(state.status);\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n          // always executed\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"bg\">\r\n      <Menu />\r\n      <br />\r\n      <div className=\"offset-md-3 col-md-6 container card \">\r\n        <Form className=\"mt-2\" onSubmit={contactUsHandler}>\r\n          <Form.Group controlId=\"formGroupFName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              name=\"fName\"\r\n              value={formData.fName}\r\n              onChange={inputHandler}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupLName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              name=\"lName\"\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              onChange={inputHandler}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>@</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              &nbsp;\r\n              <FormControl\r\n                name=\"username\"\r\n                type=\"email\"\r\n                placeholder=\"Username\"\r\n                onChange={inputHandler}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupEvent\">\r\n            <Form.Label>Event:</Form.Label>\r\n\r\n            {[\"radio\"].map((type) => (\r\n              <div key={`inline-${type}`} className=\"mb-3\">\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Single Event\"\r\n                  type={type}\r\n                  id={`inline-${type}-1`}\r\n                  name=\"eventType\"\r\n                  defaultChecked\r\n                  onClick={\r\n                    () => {\r\n                      setFormData({\r\n                        events: formData.events.map((prevState) => ({\r\n                          ...prevState,\r\n                          eventType: \"Single Event\",\r\n                        })),\r\n                      });\r\n                    }\r\n                  }\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"Multiple Event\"\r\n                  type={type}\r\n                  id={`inline-${type}-2`}\r\n                  name=\"eventType\"\r\n                  onClick={ () => {\r\n                    setFormData({\r\n                      events: formData.events.map((prevState) => ({\r\n                        ...prevState,\r\n                        eventType: \"Multiple Event\",\r\n                      })),\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-5\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue=\"Select Event\"\r\n                  name=\"eventName\"\r\n                  onChange={selectHandler}\r\n                >\r\n                  <option disabled>Select Event</option>\r\n                  {eventOptions.map((option, index) => {\r\n                    return (\r\n                      <option key={index} value={option.value}>\r\n                        {option.value}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </div>\r\n              <div className=\"col-md-7\">\r\n                <FormControl\r\n                  disabled={isSingleEvent === false}\r\n                  name=\"eventName\"\r\n                  onChange={subArrayObjects}\r\n                  placeholder=\"Other Event \"\r\n                  value = {OtherEventName}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form.Group>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 \">\r\n              <Form.Group controlId=\"formGroupDate\">\r\n                <Form.Label>Event Start Date &nbsp;</Form.Label>\r\n                <DatePicker\r\n                  required\r\n                  className=\"text-muted\"\r\n                  closeOnScroll={true}\r\n                  closeOnScroll={(e) => e.target === document}\r\n                  selected={startDate}\r\n                  onChange={useCallback((date) => {\r\n                    setStartDate(date);\r\n                    setFormData({\r\n                      events: formData.events.map((prevState) => ({\r\n                        ...prevState,\r\n                        eventStartDate: date,\r\n                      })),\r\n                    });\r\n                  }, [])}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div className=\"col-md-6 \">\r\n              <Form.Group controlId=\"formGroupDate\">\r\n                <Form.Label>Event End Date &nbsp;</Form.Label>\r\n                <DatePicker\r\n                required\r\n                  className=\"text-muted\"\r\n                  closeOnScroll={true}\r\n                  closeOnScroll={(e) => e.target === document}\r\n                  selected={endDate}\r\n                  onChange={useCallback((date) => {\r\n                    setEndDate(date);\r\n                    setFormData({\r\n                      events: formData.events.map((prevState) => ({\r\n                        ...prevState,\r\n                        eventEndDate: date,\r\n                      })),\r\n                    });\r\n                  }, [])}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n          <Form.Group>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <Form.Control as=\"select\" defaultValue=\"India\">\r\n                  <option disabled>Choose Country</option>\r\n                  <option>India</option>\r\n                </Form.Control>\r\n                &nbsp;\r\n              </div>\r\n              <div className=\"col\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={region}\r\n                  onChange={(e) => {\r\n                    setRegion(e.target.value);\r\n                    if (zip) {\r\n                      setZip(\"\");\r\n                    }\r\n                  }}\r\n                >\r\n                  <option disabled>Choose State</option>\r\n                  {stateOptions.map((option, index) => {\r\n                    return (\r\n                      <option key={index} value={option}>\r\n                        {option}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </div>\r\n              <div className=\"col\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Zip Code\"\r\n                  onChange={fetchZipCode}\r\n                  value={zip}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name = \"eventCategory\"\r\n              onChange = {inputHandler}\r\n            >\r\n              <option disabled>Event Style</option>\r\n              <option>Classic</option>\r\n              <option>Industrial</option>\r\n              <option>Vintage</option>\r\n              <option>Miscellaneous</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"]},"metadata":{},"sourceType":"module"}